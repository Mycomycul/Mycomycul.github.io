{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Programming\\\\mycomycul.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Programming\\\\mycomycul.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Programming\\\\mycomycul.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Programming\\\\mycomycul.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Programming\\\\mycomycul.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Desktop\\\\Programming\\\\mycomycul.github.io\\\\src\\\\components\\\\Modal.jsx\";\nimport React, { Component } from \"react\";\nimport \"./css/Modal.css\";\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    _classCallCheck(this, Modal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Modal).apply(this, arguments));\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      //If no data is received, clear the modal and close it\n      var _ref = this.props.project || {},\n          _ref$skills = _ref.skills,\n          skills = _ref$skills === void 0 ? [] : _ref$skills,\n          _ref$description = _ref.description,\n          description = _ref$description === void 0 ? [] : _ref$description,\n          _ref$display = _ref.display,\n          display = _ref$display === void 0 ? false : _ref$display,\n          _ref$links = _ref.links,\n          links = _ref$links === void 0 ? [] : _ref$links,\n          _ref$title = _ref.title,\n          title = _ref$title === void 0 ? \"\" : _ref$title,\n          _ref$image = _ref.image,\n          image = _ref$image === void 0 ? \"\" : _ref$image,\n          _ref$summary = _ref.summary,\n          summary = _ref$summary === void 0 ? \"\" : _ref$summary;\n\n      if (img != \"\") {\n        pic = React.createElement(\"img\", {\n          className: \"project-pic\",\n          src: \"./images/projects/\" + image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      } else {\n        pic = \"\";\n      }\n\n      return React.createElement(\"div\", {\n        id: \"project-modal\",\n        className: this.getDisplayClass(display),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.props.onClose,\n        className: \"modal-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\xD7\"), \"if( )componenet hs\", React.createElement(\"h3\", {\n        className: \"modal-project-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, title), description.map(function (line, index) {\n        return React.createElement(\"section\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \" \", line.split(\"\\n\").map(function (item, key) {\n          return React.createElement(\"p\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, item);\n        }));\n      }), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, skills.map(function (skill, index) {\n        return React.createElement(\"span\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, skill, \" \");\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"modal-links\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, links.map(function (link, key) {\n        return React.createElement(\"a\", {\n          href: link.link,\n          key: key[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, link.label);\n      }))));\n    }\n  }, {\n    key: \"getDisplayClass\",\n    value: function getDisplayClass(display) {\n      var classes = \"modal\";\n\n      if (display === true) {\n        classes += \" modal-visible\";\n      }\n\n      return classes;\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nexport { Modal as default };","map":{"version":3,"sources":["C:\\Users\\Michael\\Desktop\\Programming\\mycomycul.github.io\\src\\components\\Modal.jsx"],"names":["React","Component","Modal","props","project","skills","description","display","links","title","image","summary","img","pic","getDisplayClass","onClose","map","line","index","split","item","key","skill","link","label","classes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./css/Modal.css\";\r\n\r\nexport default class Modal extends Component {\r\n  render() {\r\n    //If no data is received, clear the modal and close it\r\n    const {\r\n      skills = [],\r\n      description = [],\r\n      display = false,\r\n      links = [],\r\n      title = \"\",\r\n      image = \"\",\r\n      summary = \"\"\r\n    } = this.props.project || {};\r\n\r\n    if (img != \"\") {\r\n      pic = <img className=\"project-pic\" src={\"./images/projects/\" + image} />;\r\n    } else {\r\n      pic = \"\";\r\n    }\r\n    return (\r\n      <div id=\"project-modal\" className={this.getDisplayClass(display)}>\r\n        <div className=\"modal-content\">\r\n          <span onClick={this.props.onClose} className=\"modal-close\">\r\n            &times;\r\n          </span>\r\n          if( )componenet hs\r\n          <h3 className=\"modal-project-title\">{title}</h3>\r\n          {/* DESCRIPTIONS Breaks apart text on newlines (\\n) and puts them each in a new span */}\r\n          {description.map((line, index) => (\r\n            <section key={index}>\r\n              {\" \"}\r\n              {line.split(\"\\n\").map((item, key) => {\r\n                return <p key={key}>{item}</p>;\r\n              })}\r\n            </section>\r\n          ))}\r\n          <section>\r\n            {skills.map((skill, index) => (\r\n              <span key={index}>{skill} </span>\r\n            ))}\r\n          </section>\r\n          <hr />\r\n          <section className=\"modal-links\">\r\n            {links.map((link, key) => {\r\n              return (\r\n                <a href={link.link} key={key[0]}>\r\n                  {link.label}\r\n                </a>\r\n              );\r\n            })}\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  getDisplayClass(display) {\r\n    let classes = \"modal\";\r\n    if (display === true) {\r\n      classes += \" modal-visible\";\r\n    }\r\n    return classes;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}